<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html>

<html xmlns="http://www.w3.org/1999/xhtml"
	xmlns:h="http://java.sun.com/jsf/html"
	xmlns:f="http://java.sun.com/jsf/core"
	xmlns:c="http://java.sun.com/jsp/jstl/core"	
    xmlns:ui="http://java.sun.com/jsf/facelets" >
        
 <ui:composition>
		

  <div id="#{id}" class='chart #{chartType} with-3d-shadow with-transitions'>
    <svg></svg>
  </div>

<script src="#{request.contextPath}/js/d3.v3.js"></script>
<script src="#{request.contextPath}/nvd3/nv.d3.js"></script>
<script src="#{request.contextPath}/nvd3/utils.js"></script>
<script src="#{request.contextPath}/nvd3/tooltip.js"></script>
<script src="#{request.contextPath}/nvd3/models/legend.js"></script>
<script src="#{request.contextPath}/nvd3/models/axis.js"></script>
<script src="#{request.contextPath}/nvd3/models/multiBar.js"></script>
<script src="#{request.contextPath}/nvd3/models/multiBarChart.js"></script>
<script src="#{request.contextPath}/js/queue.js"></script>


<script>
//<![CDATA[



queue()
    .defer(d3.json, "#{wsurl}", function(error, json) {
		#{id}_data = json;
		#{id}_drawChart();
		});

	function #{id}_drawChart(){
		console.log(#{id}_data);

		nv.addGraph(function() {
			var chart = nv.models.multiBarChart()
			  .margin({top: 10, right: 50, bottom: 150, left: 100})
			  .transitionDuration(50)
			  .reduceXTicks(false)   //If 'false', every single x-axis tick label will be rendered.
			  .rotateLabels(60)      //Angle to rotate x-axis labels.
			  .showControls(#{showControls})   //Allow user to switch between 'Grouped' and 'Stacked' mode.
			  .groupSpacing(0.3)    //Distance between each group of bars.
			  .stacked(#{stacked})
			  ;

		 
			chart.yAxis
				.tickFormat(d3.format(',.1f'));
		 
			d3.select('##{id} svg')
				.datum(#{id}_data)
				.call(chart);
		 
			nv.utils.windowResize(chart.update);
		 
			return chart;
		});

 }


//]]>
</script>

</ui:composition>
</html>
