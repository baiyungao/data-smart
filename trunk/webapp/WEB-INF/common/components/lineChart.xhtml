<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html>

<html xmlns="http://www.w3.org/1999/xhtml"
	xmlns:h="http://java.sun.com/jsf/html"
	xmlns:f="http://java.sun.com/jsf/core"
	xmlns:c="http://java.sun.com/jsp/jstl/core"	
    xmlns:ui="http://java.sun.com/jsf/facelets" >
        
 <ui:composition>
		

  <div id="#{id}" class='chart #{chartType} with-3d-shadow with-transitions'>
    <svg></svg>
  </div>

<script src="#{request.contextPath}/js/d3.v3.js"></script>
<script src="#{request.contextPath}/nvd3/nv.d3.js"></script>
<script src="#{request.contextPath}/nvd3/utils.js"></script>
<script src="#{request.contextPath}/nvd3/tooltip.js"></script>
<script src="#{request.contextPath}/nvd3/models/legend.js"></script>
<script src="#{request.contextPath}/nvd3/models/axis.js"></script>
<script src="#{request.contextPath}/nvd3/models/scatter.js"></script>
<script src="#{request.contextPath}/nvd3/models/line.js"></script>
<script src="#{request.contextPath}/nvd3/models/historicalBar.js"></script>
<script src="#{request.contextPath}/nvd3/models/linePlusBarChart.js"></script>
<script src="#{request.contextPath}/js/queue.js"></script>


<script>
//<![CDATA[

queue()
    .defer(d3.json, "#{wsurl}", function(error, json) {
		#{id}_data = json;
		#{id}_drawChart();
		});

	function #{id}_drawChart(){
		console.log(#{id}_data);

	  nv.addGraph(function() {
		var chart;
		chart = nv.models.lineChart().useInteractiveGuideline(#{guideline});

		chart
			.x(function(d,i) { 
			  return d.x;
			});


		var formatter;
			if (#{useDates}) {
				formatter = function(d,i) {
						return d3.time.format('#{dateFormat}')(new Date(d));
				}
			}
			else {
				formatter = d3.format(",.1f");
			}
			chart.margin({top: 10, right: 60, bottom: 150, left: #{left}});		chart.xAxis // chart sub-models (ie. xAxis, yAxis, etc) when accessed directly, return themselves, not the parent chart, so need to chain separately
				.tickFormat(
					formatter
				  );

			
		chart.yAxis
			.axisLabel('#{yAxisLabel}')
			.tickFormat(function(d) { return '#{yPre}' + d3.format('#{yformat}')(d) });


		d3.select('##{id} svg')
			.datum(#{id}_data)
		  .transition().duration(500)
			.call(chart);

		nv.utils.windowResize(chart.update);

		return chart;
		});
}
//------


//]]>
</script>

</ui:composition>
</html>
